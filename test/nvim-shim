#!/bin/sh

# Get the absolute path to the test directory
TEST_DIR="$(cd "$(dirname "$0")" && pwd)"
PROJECT_ROOT="$(cd "$TEST_DIR/.." && pwd)"

# Set up isolated test environment with absolute paths
export XDG_CONFIG_HOME="${TEST_DIR}/xdg/config"
export XDG_STATE_HOME="${TEST_DIR}/xdg/local/state"
export XDG_DATA_HOME="${TEST_DIR}/xdg/local/share"

# Create necessary directories
mkdir -p "${XDG_DATA_HOME}/nvim/site/pack/testing/start"

# Create symlink to the plugin itself
LINK_PATH="${XDG_DATA_HOME}/nvim/site/pack/testing/start/presenterm.nvim"
ln -sf "$PROJECT_ROOT" "$LINK_PATH"

# Add project root to Lua path for direct module loading
# Also include luarocks paths for busted
export LUA_PATH="${PROJECT_ROOT}/lua/?.lua;${PROJECT_ROOT}/lua/?/init.lua;${HOME}/.luarocks/share/lua/5.1/?.lua;${HOME}/.luarocks/share/lua/5.1/?/init.lua;;"
export LUA_CPATH="${HOME}/.luarocks/lib/lua/5.1/?.so;;"

# Run Neovim as Lua interpreter with plugins enabled
nvim --cmd 'set loadplugins' --cmd "set rtp+=${PROJECT_ROOT}" -l "$@" 2>/dev/null
exit_code=$?

# Clean up symlink
rm -f "$LINK_PATH"

exit $exit_code